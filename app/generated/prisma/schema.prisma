// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String
  nom         String
  prenom      String
  role        Role         @default(ETUDIANT)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  courses     Course[]     @relation("CreatorCourses")
  enrollments Enrollment[]
  reviews     Review[]
}

model Course {
  id          String       @id @default(uuid())
  title       String
  description String
  image       String?
  price       Float
  published   Boolean      @default(false)
  creator     User         @relation("CreatorCourses", fields: [creatorId], references: [id])
  creatorId   String
  category    Category     @relation(fields: [categoryId], references: [id])
  categoryId  String
  lessons     Lesson[]
  enrollments Enrollment[]
  reviews     Review[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Lesson {
  id       String @id @default(uuid())
  title    String
  videoUrl String
  course   Course @relation(fields: [courseId], references: [id])
  courseId String
  order    Int
}

model Category {
  id      String   @id @default(uuid())
  name    String   @unique
  slug    String   @unique
  courses Course[]
}

model Enrollment {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  createdAt DateTime @default(now())
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  comment   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  createdAt DateTime @default(now())
}

enum Role {
  ETUDIANT
  FORMATEUR
  ADMIN
}
